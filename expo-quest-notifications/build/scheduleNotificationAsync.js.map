{"version":3,"file":"scheduleNotificationAsync.js","sourceRoot":"","sources":["../src/scheduleNotificationAsync.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,SAAS,CAAC;AAE7B,OAAO,qBAAqB,MAAM,yBAAyB,CAAC;AAI5D,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,yBAAyB,CACrD,OAAiC,EACjC,OAAiC,EACjC,aAAqB,MAAM,EAAE;IAE7B,OAAO,MAAM,qBAAqB,CAAC,yBAAyB,CAC1D,UAAU,EACV,OAAO,EACP,YAAY,CAAC,OAAO,CAAC,CACtB,CAAC;AACJ,CAAC;AAED,SAAS,YAAY,CAAC,iBAA2C;IAC/D,IAAI,iBAAiB,KAAK,IAAI,EAAE;QAC9B,OAAO,IAAI,CAAC;KACb;IAED,IAAI,iBAAiB,YAAY,IAAI,EAAE;QACrC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,iBAAiB,CAAC,OAAO,EAAE,EAAE,CAAC;KACjE;SAAM,IAAI,OAAO,iBAAiB,KAAK,QAAQ,EAAE;QAChD,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,iBAAiB,EAAE,CAAC;KACvD;SAAM,IAAI,SAAS,IAAI,iBAAiB,EAAE;QACzC,OAAO;YACL,IAAI,EAAE,cAAc;YACpB,OAAO,EAAE,iBAAiB,CAAC,OAAO;YAClC,OAAO,EAAE,iBAAiB,CAAC,OAAO,IAAI,KAAK;SAC5C,CAAC;KACH;SAAM;QACL,MAAM,EAAE,OAAO,EAAE,GAAG,eAAe,EAAE,GAAG,iBAAiB,CAAC;QAC1D,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,eAAe,EAAE,OAAO,EAAE,CAAC;KAC9D;AACH,CAAC","sourcesContent":["import uuidv4 from 'uuid/v4';\n\nimport NotificationScheduler from './NotificationScheduler';\nimport { NotificationTriggerInput as NativeNotificationTriggerInput } from './NotificationScheduler.types';\nimport { NotificationContentInput, NotificationTriggerInput } from './Notifications.types';\n\nexport default async function scheduleNotificationAsync(\n  content: NotificationContentInput,\n  trigger: NotificationTriggerInput,\n  identifier: string = uuidv4()\n): Promise<string> {\n  return await NotificationScheduler.scheduleNotificationAsync(\n    identifier,\n    content,\n    parseTrigger(trigger)\n  );\n}\n\nfunction parseTrigger(userFacingTrigger: NotificationTriggerInput): NativeNotificationTriggerInput {\n  if (userFacingTrigger === null) {\n    return null;\n  }\n\n  if (userFacingTrigger instanceof Date) {\n    return { type: 'date', timestamp: userFacingTrigger.getTime() };\n  } else if (typeof userFacingTrigger === 'number') {\n    return { type: 'date', timestamp: userFacingTrigger };\n  } else if ('seconds' in userFacingTrigger) {\n    return {\n      type: 'timeInterval',\n      seconds: userFacingTrigger.seconds,\n      repeats: userFacingTrigger.repeats ?? false,\n    };\n  } else {\n    const { repeats, ...calendarTrigger } = userFacingTrigger;\n    return { type: 'calendar', value: calendarTrigger, repeats };\n  }\n}\n"]}